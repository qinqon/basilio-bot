#!/usr/bin/env python 
import os
import argparse
import telepot
import basilio
import time
import os
import basilio
import periodic_timer

from threading import Thread

class StateMachine:
    Kickstalker, Recordhim, Waitforhim, Playcall, Callhim, Unknown = range(6)
    def __init__(self, bot, basilio):
        self.bot = bot
        self.basilio = basilio
        self.setStates([])
        self.state_index = 0
    
    def setStates(self, states):
        self.state_index = -1
        self.states = states

    def progress(self, content):
      self.state_index += 1
      if len(self.states) > self.state_index:
         state = self.states[self.state_index]
         self.runState(state, content)

    def runState(self, state, content):
        if state == StateMachine.Kickstalker:
            chat_id = content
            self.bot.sendMessage(chat_id, "Go away stalker !!!")
        elif state == StateMachine.Callhim:
            chat_id = content
            bot.sendMessage(chat_id, "Say something to Basilio")
        elif state == StateMachine.Recordhim:
            chat_id = content
            bot.sendMessage(chat_id, "Recording video...")
            video = basilio.recordHim(number_of_frames=100)
            bot.sendVideo(chat_id, video)
        elif state == StateMachine.Waitforhim:
            chat_id = content
            bot.sendMessage(chat_id, "Waiting for Basilio...")
            is_there = basilio.waitForHim(frames_to_wait=300)
            if is_there:
                bot.sendMessage(chat_id, "He is here")
                self.progress(chat_id)
            else:
                bot.sendMessage(chat_id, "He is not here")
         
        elif state == StateMachine.Playcall:
            chat_id, file_id = content
            file_url='https://api.telegram.org/file/bot%s/%s' % (args.token, bot.getFile(file_id)['file_path'])
            basilio.callHim(file_url)
            self.progress(chat_id)

def handleMsg(msg):
    global state_machine
    global args
    content_type, chat_type, chat_id = telepot.glance(msg) 
    user_id=msg['from']['id']
    permitted_user_ids=args.user_id.split(',')
    if not str(user_id) in permitted_user_ids:
        state_machine.setStates([StateMachine.Kickstalker])
        state_machine.progress(chat_id)
        return
    if (content_type == 'text'):
        text    = msg['text']
        if text == '/callandshow':
            state_machine.setStates([StateMachine.Callhim, StateMachine.Playcall, StateMachine.Recordhim])
            state_machine.progress(chat_id)
        elif text == '/callwaitandshow':
            state_machine.setStates([StateMachine.Callhim, StateMachine.Playcall, StateMachine.Waitforhim, StateMachine.Recordhim])
            state_machine.progress(chat_id)
        elif text == '/waitandshow':
            state_machine.setStates([StateMachine.Waitforhim, StateMachine.Recordhim])
            state_machine.progress(chat_id)
        elif text == '/show':
            state_machine.setStates([StateMachine.Recordhim])
            state_machine.progress(chat_id)
    elif (content_type == 'voice'):
            file_id = msg['voice']['file_id']
            state_machine.progress((chat_id, file_id)) 

parser = argparse.ArgumentParser(description='Instagram bot for HAL operations.')
parser.add_argument("token", help="Telegram bot token string as generated by BotFather")
parser.add_argument("user_id", help="Telegram user ID to restrict the bot")
parser.parse_args()
args = parser.parse_args()


# Getting the token from command-line is better than embedding it in code,
# because tokens are supposed to be kept secret.
bot = telepot.Bot(args.token)
basilio = basilio.Basilio()

state_machine = StateMachine(bot, basilio)
bot.message_loop(handleMsg)
print ('Listening ...')

# Keep the program running.
while 1:
	time.sleep(10)
